# PassiveRecon - Ejemplo de Configuración
# Documentación: https://github.com/yourusername/passiveRecon

# Target domain para reconnaissance
target: "example.com"

# Directorio de salida para resultados
outdir: "./results"

# Número de workers concurrentes
workers: 6

# Habilitar modo activo (httpx, dnsx, etc.)
active: true

# Herramientas a ejecutar (en orden)
tools:
  - amass
  - subfinder
  - assetfinder
  - rdap
  - crtsh
  - censys
  - dedupe
  - dnsx
  - waybackurls
  - gau
  - httpx
  - subjs
  - linkfinderevo

# Timeout global por defecto (segundos)
timeout: 120

# Timeouts específicos por herramienta (segundos)
# Estos sobrescriben el timeout global para herramientas específicas
tool_timeouts:
  amass: 300          # 5 minutos - amass puede tardar en enumerar subdominios
  waybackurls: 240    # 4 minutos - wayback puede ser lento con muchos dominios
  gau: 240            # 4 minutos - similar a waybackurls
  httpx: 600          # 10 minutos - necesita tiempo para probar todos los dominios
  linkfinderevo: 400  # 6.5 minutos - análisis de JS puede ser intensivo
  subfinder: 180      # 3 minutos - múltiples fuentes
  crtsh: 180          # 3 minutos - consultas a base de datos CT
  censys: 180         # 3 minutos - API rate limits

# Nivel de verbosidad (0=silent, 1=info, 2=debug, 3=trace)
verbosity: 1

# Generar reporte HTML al finalizar
report: true

# Configuración de proxy (opcional)
# proxy: "http://127.0.0.1:8080"
# proxy_ca: "/path/to/ca-cert.pem"

# Credenciales Censys API (opcional)
# censys_api_id: "your-api-id"
# censys_api_secret: "your-api-secret"

# Modo de scope: "subdomains" (incluye subdominios) o "domain" (solo dominio exacto)
scope: "subdomains"

# Checkpoint para resume capability
resume: false
checkpoint_interval: 30  # Guardar checkpoint cada 30 segundos
